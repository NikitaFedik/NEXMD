!!********************************************************************
!
!  Subroutine to print normal modes after Davidson diagonlization
!  that is, print the array qm2ds%v2, the normal modes in AO rep
!
!********************************************************************
!
!--------------------------------------------------------------------
!
!  Josiah A. Bjorgaard NDSU 2013
!
!--------------------------------------------------------------------

   subroutine printNM(filenumber)
   use qm2_davidson_module
   implicit none

   integer i,j,filenumber,n
   n=size(qm2ds%v2,1)

   !open(6,*)
 
   do i=1,qm2ds%Mx
   write(76,*) 'Printing normal mode',i,'with',n,'values'

   do j=1,n

   write(76,"(F10.8)") qm2ds%v2(j,i:
   end do
   end do
   !close(6,)

   end

 subroutine printCfitNM(filenumber)
 use qmmm_module, only : qm2_params, qm2_struct, qmmm_struct, qmmm_nml
 use constants, only : light_speed, bohr_radius, charge_on_elec,
CODATA08_AU_TO_DEBYE, BOHRS_TO_A
 use qm2_davidson_module
      implicit none
!********************************************************************
!
!  Subroutine to fit charges to normal modes after Davidson diagonlization
!  accordint to the NDDO methodology.
!
!********************************************************************
!
!--------------------------------------------------------------------
!
!  Josiah A. Bjorgaard NDSU 2013
!
!--------------------------------------------------------------------

      _REAL_, intent(inout) :: coord(*)

! Determination of constants are  needed for the computation of the dipole

      integer :: loop_count,orb_beg,orb_end,orb_size,i,nquant,j

! Number of atoms without solvent

      _REAL_ :: qmdipole(3), totaldipol
      _REAL_ :: densisp, summasp
      integer :: ndubl

      _REAL_ :: sc_const, c2_const, iqm_charge

        ! CML TEST
      _REAL_ :: dip(3, qm2ds%Nb*(qm2ds%Nb+1)/2)

      ! AWG: Currently not supported with d orbitals for NDDO methods
      if ( .not. qmmm_nml%qmtheory%DFTB ) then
         do i = 1,qmmm_struct%nquant_nlink
            if ( qm2_params%natomic_orbs(i) > 5 ) return
         end do
      end if

      ! Increasing the number of quantum atoms and determining orbital numbers
      do nquant=1,qmmm_struct%nquant_nlink

         ! Asking for the Method, if DFTB is used it does not compute the
         ! changes in charge due to orbitals.             
         if (.not. qmmm_nml%qmtheory%DFTB) then
            orb_beg=qm2_params%orb_loc(1,nquant)
            orb_end=qm2_params%orb_loc(2,nquant)

            ! Determination of the values difference between the orbitals
            orb_size=orb_end-orb_beg

            ! Trying to get de density value for P and S interaction over the
            ! same atom 
            c2_const=2.0D0*bohr_radius*sc_const*qm2_params%multip_2c_elec_params(1,nquant)

